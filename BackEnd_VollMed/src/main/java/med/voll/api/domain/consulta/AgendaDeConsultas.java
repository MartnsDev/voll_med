package med.voll.api.domain.consulta;import med.voll.api.domain.consulta.validacoes.EscolherMedico;import med.voll.api.domain.consulta.validacoes.ValidadorAgendamentoDeConsulta;import med.voll.api.domain.paciente.PacienteRepository;import med.voll.api.infra.exception.TratadorDeErros.ConsultaException;import org.springframework.http.HttpStatus;import org.springframework.security.core.context.SecurityContextHolder;import org.springframework.stereotype.Service;import java.util.List;@Servicepublic class AgendaDeConsultas {    private final ConsultaRepository consultaRepository;    private final PacienteRepository pacienteRepository;    private final EscolherMedico escolherMedico;    private final List<ValidadorAgendamentoDeConsulta> validadores;    public AgendaDeConsultas(ConsultaRepository consultaRepository,                             PacienteRepository pacienteRepository,                             EscolherMedico escolherMedico,                             List<ValidadorAgendamentoDeConsulta> validadores) {        this.consultaRepository = consultaRepository;        this.pacienteRepository = pacienteRepository;        this.escolherMedico = escolherMedico;        this.validadores = validadores;    }    public DadosDetalhamentoConsulta agendar(DadosAgendamentoConsulta dados) {        var paciente = pacienteRepository.findById(dados.idPaciente())                .orElseThrow(() -> new ConsultaException("Paciente nÃ£o encontrado", HttpStatus.NOT_FOUND));        validadores.forEach(v -> v.validar(dados));        var medico = escolherMedico.executar(dados);        var consulta = new Consulta(null, medico, paciente, dados.data());        consultaRepository.save(consulta);        return new DadosDetalhamentoConsulta(                consulta.getId(),                consulta.getMedico().getId(),                consulta.getPaciente().getId(),                consulta.getData()        );    }}