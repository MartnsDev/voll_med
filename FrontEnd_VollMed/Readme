<!doctype html>
<html lang="pt-br">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Como rodar o Frontend + Configurar CORS (Spring Boot)</title>
  <style>
    :root {
      --bg: #0b0f14;
      --card: #111826;
      --ink: #e7edf3;
      --muted: #9fb0c0;
      --accent: #4f8cff;
      --ok: #22c55e;
      --warn: #f59e0b;
      --code: #0b1220;
      --code-border: #1f2a44;
    }
    * { box-sizing: border-box; }
    body { margin: 0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial, "Apple Color Emoji", "Segoe UI Emoji"; background: var(--bg); color: var(--ink); line-height: 1.6; }
    header { padding: 36px 20px 10px; text-align: center; }
    h1 { margin: 0 0 8px; font-size: 28px; }
    .subtitle { color: var(--muted); font-size: 14px; }
    main { max-width: 980px; margin: 24px auto 80px; padding: 0 20px; }
    .card { background: linear-gradient(180deg, var(--card), #0e1623); border: 1px solid #1a2435; border-radius: 16px; padding: 22px; margin-bottom: 18px; box-shadow: 0 6px 18px rgb(0 0 0 / 20%); }
    h2 { margin: 0 0 12px; font-size: 22px; }
    h3 { margin-top: 18px; font-size: 18px; }
    p, li { color: var(--ink); }
    .muted { color: var(--muted); }
    .kbd { background: #0f172a; border: 1px solid #23304e; padding: 2px 6px; border-radius: 6px; font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; font-size: 12px; }
    pre { background: var(--code); border: 1px solid var(--code-border); border-radius: 12px; padding: 14px; overflow: auto; }
    code { font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; font-size: 13px; }
    .toc a { color: var(--ink); text-decoration: none; }
    .toc a:hover { color: var(--accent); }
    a { color: var(--accent); }
    .tip { border-left: 4px solid var(--ok); padding: 12px; background: #0c1a12; border-radius: 8px; }
    .warn { border-left: 4px solid var(--warn); padding: 12px; background: #1a1508; border-radius: 8px; }
    details { background: #0f172a; border: 1px solid #223153; border-radius: 10px; padding: 12px 14px; }
    summary { cursor: pointer; }
    .hr { height: 1px; background: #1a2435; margin: 18px 0; }
    .inline-code { background: #0f172a; border: 1px solid #23304e; padding: 2px 6px; border-radius: 6px; }
    .pill { display: inline-block; font-size: 12px; border: 1px solid #23304e; background: #0f172a; padding: 2px 8px; border-radius: 999px; color: var(--muted); }
  </style>
</head>
<body>
  <header>
    <h1>Como rodar o Frontend do Projeto</h1>
    <div class="subtitle">Guia r√°pido + configura√ß√£o de CORS no Spring Boot</div>
  </header>
  <main>
    <section class="card">
      <h2>√çndice</h2>
      <ol class="toc">
        <li><a href="#pre">Pr√©-requisitos</a></li>
        <li><a href="#passos">Passos para rodar o Frontend</a></li>
        <li><a href="#server-local">Servidor local (recomendado)</a></li>
        <li><a href="#conexao">Conex√£o com a API</a></li>
        <li><a href="#testes">Testando</a></li>
        <li><a href="#cors">Configurar CORS no Spring Boot</a></li>
        <li><a href="#fetch">Exemplo de envio de dados (fetch)</a></li>
      </ol>
    </section>

    <section id="pre" class="card">
      <h2>Pr√©-requisitos</h2>
      <ul>
        <li>Navegador atualizado (Chrome, Firefox, Edge).</li>
        <li>Backend da API rodando em <span class="inline-code">http://localhost:8080</span> ou URL p√∫blica (Render, Railway etc.).</li>
      </ul>
    </section>

    <section id="passos" class="card">
      <h2>Passos para rodar o Frontend</h2>
      <h3>1) Clonar o reposit√≥rio</h3>
      <pre><code>git clone https://github.com/seu-usuario/seu-projeto-frontend.git
cd seu-projeto-frontend</code></pre>

      <h3>2) Abrir os arquivos HTML</h3>
      <p>Voc√™ pode abrir direto no navegador:</p>
      <ul>
        <li><span class="inline-code">index.html</span> ‚Üí Tela de login</li>
        <li><span class="inline-code">cadastrar.html</span> ‚Üí Tela de cadastro</li>
        <li><span class="inline-code">dashboard.html</span> ‚Üí Painel principal</li>
      </ul>
      <div class="tip"><strong>Dica:</strong> clique com o bot√£o direito no arquivo e selecione <em>Abrir com ‚Üí Navegador</em>.</div>
    </section>

    <section id="server-local" class="card">
      <h2>Rodar com servidor local <span class="pill">opcional, recomendado</span></h2>
      <p>Para evitar erros de CORS ou carregamento, rode um servidor local:</p>
      <ol>
        <li>No VS Code, instale a extens√£o <strong>Live Server</strong>.</li>
        <li>Clique em <em>"Go Live"</em> no rodap√© do VS Code.</li>
        <li>O projeto abrir√° em <span class="inline-code">http://localhost:5500</span>.</li>
      </ol>
      <details>
        <summary>Alternativas sem VS Code</summary>
        <ul>
          <li>Python HTTP server: <span class="inline-code">python -m http.server 5500</span></li>
          <li>Node http-server: <span class="inline-code">npx http-server -p 5500</span></li>
        </ul>
      </details>
    </section>

    <section id="conexao" class="card">
      <h2>Conex√£o com a API</h2>
      <p>O frontend se comunica com a API pelo endere√ßo configurado no JavaScript. Procure por algo como:</p>
      <pre><code>const API_URL = "http://localhost:8080";</code></pre>
      <p>Se voc√™ hospedar sua API (ex.: Render), troque para a URL p√∫blica:</p>
      <pre><code>const API_URL = "https://seu-projeto.onrender.com";</code></pre>
    </section>

    <section id="testes" class="card">
      <h2>Testando</h2>
      <ol>
        <li>Abra o <span class="inline-code">index.html</span>.</li>
        <li>Fa√ßa login ou cadastre um usu√°rio.</li>
        <li>Se a API estiver OK, o frontend exibir√° dados no <span class="inline-code">dashboard</span>.</li>
      </ol>
    </section>

    <section id="cors" class="card">
      <h2>Configurar CORS no Spring Boot</h2>
      <p>Por padr√£o, navegadores bloqueiam requisi√ß√µes <em>cross-origin</em> (ex.: front em <span class="inline-code">http://localhost:5500</span> e API em <span class="inline-code">http://localhost:8080</span>). O Spring Boot precisa liberar isso.</p>

      <h3>‚úÖ Configura√ß√£o Global de CORS</h3>
      <p>Crie a classe <span class="inline-code">CorsConfig.java</span>:</p>
      <pre><code>package br.com.seuprojeto.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

@Configuration
public class CorsConfig {

    @Bean
    public WebMvcConfigurer corsConfigurer() {
        return new WebMvcConfigurer() {
            @Override
            public void addCorsMappings(CorsRegistry registry) {
                registry.addMapping("/**") // libera todos os endpoints
                        .allowedOrigins("http://localhost:5500", "http://127.0.0.1:5500", "https://seu-front.netlify.app") // endere√ßos do seu front
                        .allowedMethods("GET", "POST", "PUT", "DELETE", "OPTIONS") // m√©todos permitidos
                        .allowedHeaders("*") // todos os headers
                        .allowCredentials(true); // permite cookies/autentica√ß√£o
            }
        };
    }
}
</code></pre>

      <h3>üîπ Se voc√™ usa Spring Security</h3>
      <p>Habilite CORS na configura√ß√£o de seguran√ßa:</p>
      <pre><code>import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
            .csrf().disable() // desabilite em DEV; em PROD, avalie manter habilitado e usar tokens
            .cors().and() // habilita CORS
            .authorizeHttpRequests(auth -> auth
                .requestMatchers("/publico/**").permitAll() // libera endpoints p√∫blicos
                .anyRequest().authenticated()
            );

        return http.build();
    }
}
</code></pre>
      <div class="warn"><strong>Aten√ß√£o:</strong> Em produ√ß√£o, evite <em>"*"</em> em <span class="inline-code">allowedOrigins</span>. Restrinja aos seus dom√≠nios reais.</div>
    </section>

    <section id="fetch" class="card">
      <h2>Exemplo: envio de dados com <span class="inline-code">fetch</span></h2>
      <pre><code>fetch("http://localhost:8080/api/usuarios", {
  method: "POST",
  headers: {
    "Content-Type": "application/json"
  },
  body: JSON.stringify({
    nome: "Matheus",
    email: "teste@teste.com"
  })
})
.then(res => res.json())
.then(data => console.log("Usu√°rio cadastrado:", data))
.catch(err => console.error("Erro:", err));
</code></pre>
    </section>

    <section class="card">
      <h2>FAQ r√°pido</h2>
      <p><strong>Erro CORS?</strong> Verifique <span class="inline-code">allowedOrigins</span> e se o navegador est√° acessando exatamente o mesmo host/porta configurados.</p>
      <p><strong>API p√∫blica (Render)?</strong> Troque <span class="inline-code">API_URL</span> para a URL p√∫blica e, se usar <span class="inline-code">allowCredentials(true)</span>, configure <span class="inline-code">allowedOrigins</span> com o dom√≠nio do seu front.</p>
    </section>

    <footer class="muted" style="text-align:center; padding: 22px;">
      <span>Feito para devs Java/Spring Boot. Ajuste os dom√≠nios e endpoints conforme seu projeto.</span>
    </footer>
  </main>
</body>
</html>
